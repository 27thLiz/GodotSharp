/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace GodotEngine {

public class UndoRedo : Object {

  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  
  internal UndoRedo(global::System.IntPtr cPtr, bool cMemoryOwn) : base(GodotEnginePINVOKE.UndoRedo_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }  
  
  protected UndoRedo(bool cMemoryOwn) : base(cMemoryOwn) {}
  
  new internal void internal_init(global::System.IntPtr cPtr) {
    base.internal_init(GodotEnginePINVOKE.UndoRedo_SWIGUpcast(cPtr));
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }
  
  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UndoRedo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }



  public UndoRedo() : this(false) {
    if (swigCPtr.Handle == global::System.IntPtr.Zero) {
      internal_init(GodotEnginePINVOKE.new_UndoRedo());
      InternalHelpers.TieManagedToUnmanaged(this, swigCPtr.Handle);
    }
  }

  public void create_action(string name, bool mergeable) {
    GodotEnginePINVOKE.UndoRedo_create_action__SWIG_0(swigCPtr, name, mergeable);
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void create_action(string name) {
    GodotEnginePINVOKE.UndoRedo_create_action__SWIG_1(swigCPtr, name);
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void commit_action() {
    GodotEnginePINVOKE.UndoRedo_commit_action(swigCPtr);
  }

  public void add_do_method(Object arg0, string method, Variant arg0_, Variant arg1_, Variant arg2_, Variant arg3_, Variant arg4_) {
    GodotEnginePINVOKE.UndoRedo_add_do_method__SWIG_0(swigCPtr, Object.getCPtr(arg0), method, Variant.getCPtr(arg0_), Variant.getCPtr(arg1_), Variant.getCPtr(arg2_), Variant.getCPtr(arg3_), Variant.getCPtr(arg4_));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_do_method(Object arg0, string method, Variant arg0_, Variant arg1_, Variant arg2_, Variant arg3_) {
    GodotEnginePINVOKE.UndoRedo_add_do_method__SWIG_1(swigCPtr, Object.getCPtr(arg0), method, Variant.getCPtr(arg0_), Variant.getCPtr(arg1_), Variant.getCPtr(arg2_), Variant.getCPtr(arg3_));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_do_method(Object arg0, string method, Variant arg0_, Variant arg1_, Variant arg2_) {
    GodotEnginePINVOKE.UndoRedo_add_do_method__SWIG_2(swigCPtr, Object.getCPtr(arg0), method, Variant.getCPtr(arg0_), Variant.getCPtr(arg1_), Variant.getCPtr(arg2_));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_do_method(Object arg0, string method, Variant arg0_, Variant arg1_) {
    GodotEnginePINVOKE.UndoRedo_add_do_method__SWIG_3(swigCPtr, Object.getCPtr(arg0), method, Variant.getCPtr(arg0_), Variant.getCPtr(arg1_));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_do_method(Object arg0, string method, Variant arg0_) {
    GodotEnginePINVOKE.UndoRedo_add_do_method__SWIG_4(swigCPtr, Object.getCPtr(arg0), method, Variant.getCPtr(arg0_));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_do_method(Object arg0, string method) {
    GodotEnginePINVOKE.UndoRedo_add_do_method__SWIG_5(swigCPtr, Object.getCPtr(arg0), method);
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_undo_method(Object arg0, string method, Variant arg0_, Variant arg1_, Variant arg2_, Variant arg3_, Variant arg4_) {
    GodotEnginePINVOKE.UndoRedo_add_undo_method__SWIG_0(swigCPtr, Object.getCPtr(arg0), method, Variant.getCPtr(arg0_), Variant.getCPtr(arg1_), Variant.getCPtr(arg2_), Variant.getCPtr(arg3_), Variant.getCPtr(arg4_));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_undo_method(Object arg0, string method, Variant arg0_, Variant arg1_, Variant arg2_, Variant arg3_) {
    GodotEnginePINVOKE.UndoRedo_add_undo_method__SWIG_1(swigCPtr, Object.getCPtr(arg0), method, Variant.getCPtr(arg0_), Variant.getCPtr(arg1_), Variant.getCPtr(arg2_), Variant.getCPtr(arg3_));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_undo_method(Object arg0, string method, Variant arg0_, Variant arg1_, Variant arg2_) {
    GodotEnginePINVOKE.UndoRedo_add_undo_method__SWIG_2(swigCPtr, Object.getCPtr(arg0), method, Variant.getCPtr(arg0_), Variant.getCPtr(arg1_), Variant.getCPtr(arg2_));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_undo_method(Object arg0, string method, Variant arg0_, Variant arg1_) {
    GodotEnginePINVOKE.UndoRedo_add_undo_method__SWIG_3(swigCPtr, Object.getCPtr(arg0), method, Variant.getCPtr(arg0_), Variant.getCPtr(arg1_));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_undo_method(Object arg0, string method, Variant arg0_) {
    GodotEnginePINVOKE.UndoRedo_add_undo_method__SWIG_4(swigCPtr, Object.getCPtr(arg0), method, Variant.getCPtr(arg0_));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_undo_method(Object arg0, string method) {
    GodotEnginePINVOKE.UndoRedo_add_undo_method__SWIG_5(swigCPtr, Object.getCPtr(arg0), method);
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_do_property(Object arg0, string property, Variant value) {
    GodotEnginePINVOKE.UndoRedo_add_do_property(swigCPtr, Object.getCPtr(arg0), property, Variant.getCPtr(value));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_undo_property(Object arg0, string property, Variant value) {
    GodotEnginePINVOKE.UndoRedo_add_undo_property(swigCPtr, Object.getCPtr(arg0), property, Variant.getCPtr(value));
    if (GodotEnginePINVOKE.SWIGPendingException.Pending) throw GodotEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_do_reference(Object arg0) {
    GodotEnginePINVOKE.UndoRedo_add_do_reference(swigCPtr, Object.getCPtr(arg0));
  }

  public void add_undo_reference(Object arg0) {
    GodotEnginePINVOKE.UndoRedo_add_undo_reference(swigCPtr, Object.getCPtr(arg0));
  }

  public void clear_history() {
    GodotEnginePINVOKE.UndoRedo_clear_history(swigCPtr);
  }

  public string get_current_action_name() {
    string ret = GodotEnginePINVOKE.UndoRedo_get_current_action_name(swigCPtr);
    return ret;
  }

  public int get_version() {
    int ret = GodotEnginePINVOKE.UndoRedo_get_version(swigCPtr);
    return ret;
  }

}

}
